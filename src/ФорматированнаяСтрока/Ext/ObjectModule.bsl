#Область ПрограммныйИнтерфейс

Функция ФорматированнаяСтрока(СтрокаСТегами) Экспорт
	
	Стек = Новый Массив;
	Стек.Добавить(Новый Структура("Тег, Части", "", Новый Массив));
	
	Позиция = 1;
	НачалоТекста = 0;
	ДлинаСтроки = СтрДлина(СтрокаСТегами);
	ЭтоПерваяЧасть = Истина;
	Пока Позиция < ДлинаСтроки Цикл
		Тег = ПолучитьСледующийТег(СтрокаСТегами, Позиция);
		
		Если ЗначениеЗаполнено(Тег.Тег) Тогда
			Если ЭтоПерваяЧасть Тогда
				ВершинаСтека = Стек[Стек.ВГраница()];
				ВершинаСтека.Части.Добавить(Сред(СтрокаСТегами, 1, Тег.Позиция - СтрДлина(Тег.Тег) - 1));
				ЭтоПерваяЧасть = Ложь;
			КонецЕсли;
			Если Тег.Открывающий Тогда
				Если ЗначениеЗаполнено(НачалоТекста) Тогда
					ВершинаСтека = Стек[Стек.ВГраница()];
					ВершинаСтека.Части.Добавить(Сред(СтрокаСТегами, НачалоТекста, Тег.Позиция - СтрДлина(Тег.Тег) - НачалоТекста));
					НачалоТекста = 0;
				КонецЕсли;
				Если СтрНачинаетсяС(Тег.Тег, "<img") Тогда
					ВершинаСтека.Части.Добавить(ПостроитьСтрокуПоТегам(СтрокаСТегами, Тег, Тег));
					НачалоТекста = Тег.Позиция;
				Иначе
					Стек.Добавить(Тег);
				КонецЕсли;
			Иначе
				ВершинаСтека = Стек[Стек.ВГраница()];
				Если ВершинаСтека.ПарныйТег = Тег.Тег Тогда
					НачалоТекста = Тег.Позиция + СтрДлина(Тег.Тег);
					Стек.Удалить(Стек.ВГраница());					
					НоваяЧасть = ПостроитьСтрокуПоТегам(СтрокаСТегами, ВершинаСтека, Тег);
					ВершинаСтека = Стек[Стек.ВГраница()];
					ВершинаСтека.Части.Добавить(НоваяЧасть);					
				КонецЕсли;			
			КонецЕсли;
		Иначе
			ВершинаСтека = Стек[Стек.ВГраница()];
			ВершинаСтека.Части.Добавить(Сред(СтрокаСТегами, Позиция));
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ВершинаСтека = Стек[Стек.ВГраница()];

	Возврат Новый ФорматированнаяСтрока(ВершинаСтека.Части);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПостроитьСтрокуПоТегам(СтрокаСТегами, ОткрывающийТег, ЗакрывающийТег)
	
	Строка = "";
	Если ЗначениеЗаполнено(ОткрывающийТег.Части) Тогда
		Содержимое = Новый ФорматированнаяСтрока(ОткрывающийТег.Части);
	Иначе
		Содержимое = Сред(СтрокаСТегами, ОткрывающийТег.Позиция, ЗакрывающийТег.Позиция - ОткрывающийТег.Позиция);
	КонецЕсли;
	
	Если СтрНачинаетсяС(ОткрывающийТег.Тег, "<img") Тогда
		Начало = СтрНайти(ОткрывающийТег.Тег, "src=""") + СтрДлина("src=""");
		Конец = СтрНайти(ОткрывающийТег.Тег, """",, Начало + 1);
		ИмяКартинки = Сред(ОткрывающийТег.Тег, Начало, Конец - Начало);
		Содержимое = БиблиотекаКартинок[ИмяКартинки];
	КонецЕсли;
	
	Стиль = ИзвлечьСтиль(ОткрывающийТег.Тег);
	
	Возврат Новый ФорматированнаяСтрока(Содержимое, Стиль.Шрифт, Стиль.ЦветТекста, Стиль.ЦветФона, Стиль.Ссылка);
	
КонецФункции

Функция ИзвлечьСтиль(Тег)
	
	Стиль = Новый Структура("Шрифт, ЦветТекста, ЦветФона, Ссылка");
	Если Тег = "<b>" Тогда
		Стиль.Шрифт = Новый Шрифт(,, Истина);
	ИначеЕсли Тег = "<i>" Тогда
		Стиль.Шрифт = Новый Шрифт(,,, Истина);
	ИначеЕсли СтрНачинаетсяС(Тег, "<a") ИЛИ СтрНачинаетсяС(Тег, "<span") Тогда
		ПозицияАтрибутаСсылка = СтрНайти(Тег, "href = "); // обратная совместимость с кодом БСП
		Если ПозицияАтрибутаСсылка Тогда
			Начало = ПозицияАтрибутаСсылка + СтрДлина("href = ");
			Конец = СтрНайти(Тег, ">");
			Стиль.Ссылка = СокрЛП(Сред(Тег, Начало, Конец - Начало));
		Иначе
			ПозицияАтрибутаСсылка = СтрНайти(Тег, "href");
			Если ПозицияАтрибутаСсылка Тогда
				Начало = СтрНайти(Тег, """",, ПозицияАтрибутаСсылка);
				Конец = СтрНайти(Тег, """",, ПозицияАтрибутаСсылка, 2);
				Стиль.Ссылка = Сред(Тег, Начало + 1, Конец - Начало - 1);
			КонецЕсли;
		КонецЕсли;
		
		ПозицияАтрибутаСтиль = СтрНайти(Тег, "style");
		Если ПозицияАтрибутаСтиль Тогда
			Шрифт = Новый Структура("ИмяШрифта, Размер, Жирный, Наклонный, Подчеркнутый, Зачеркнутый");
			ЦветТекста = Неопределено;
			ЦветФона = Неопределено;
			
			Начало = СтрНайти(Тег, """",, ПозицияАтрибутаСтиль);
			Конец = СтрНайти(Тег, """",, ПозицияАтрибутаСтиль, 2);
			СтилиCSS = СтрРазделить(Сред(Тег, Начало + 1, Конец - Начало - 1), ";");
			
			Для Каждого СтильCSS Из СтилиCSS Цикл
				Если Не ЗначениеЗаполнено(СтильCSS) Тогда
					Продолжить;
				КонецЕсли;
				
				КлючЗначение = СтрРазделить(СтильCSS, ":");
				Ключ = СокрЛП(НРег(КлючЗначение[0]));
				Значение = СокрЛП(НРег(КлючЗначение[1]));
				Если Ключ = "font-weight" И Значение = "bold" Тогда
					Шрифт.Жирный = Истина;
				ИначеЕсли Ключ = "text-decoration" И Значение = "line-through" Тогда
					Шрифт.Зачеркнутый = Истина;
				ИначеЕсли Ключ = "text-decoration" И Значение = "underline" Тогда
					Шрифт.Подчеркнутый = Истина;
				ИначеЕсли Ключ = "font-style" И Значение = "italic" Тогда
					Шрифт.Наклонный = Истина;
				ИначеЕсли Ключ = "font-family" Тогда
					Шрифт.ИмяШрифта = Значение;
				ИначеЕсли Ключ = "font-size" Тогда
					Шрифт.Размер = Число(Значение);
				ИначеЕсли Ключ = "color" Тогда
					ЦветТекста = ПолучитьЦветИзСтроки(Значение);
				ИначеЕсли Ключ = "background-color" Тогда
					ЦветФона = ПолучитьЦветИзСтроки(Значение);
				КонецЕсли;
			КонецЦикла;
			
			Стиль.Шрифт = Новый Шрифт(Шрифт.ИмяШрифта, Шрифт.Размер, Шрифт.Жирный, Шрифт.Наклонный, Шрифт.Подчеркнутый, Шрифт.Зачеркнутый);
			Стиль.ЦветТекста = ЦветТекста;
			Стиль.ЦветФона = ЦветФона;			
		КонецЕсли;
	КонецЕсли;		
	
	Возврат Стиль;
	
КонецФункции

Функция ПолучитьЦветИзСтроки(Знач ЦветСтрока)
	
	Цвет = Неопределено;
	Если Сред(ЦветСтрока, 1, 1) = "#" Тогда
		ЦветHex = Сред(ЦветСтрока, 2);
		Если СтрДлина(ЦветHex) = 3 Тогда
			Цвет = Новый Цвет(
				ЧислоИзШестнадцатеричнойСтроки("0x" + Сред(ЦветHex, 1, 1) + Сред(ЦветHex, 1, 1)),
				ЧислоИзШестнадцатеричнойСтроки("0x" + Сред(ЦветHex, 2, 1) + Сред(ЦветHex, 2, 1)),
				ЧислоИзШестнадцатеричнойСтроки("0x" + Сред(ЦветHex, 3, 1) + Сред(ЦветHex, 3, 1)));
		ИначеЕсли СтрДлина(ЦветHex) = 6 Тогда
			Цвет = Новый Цвет(
				ЧислоИзШестнадцатеричнойСтроки("0x" + Сред(ЦветHex, 1, 2)),
				ЧислоИзШестнадцатеричнойСтроки("0x" + Сред(ЦветHex, 3, 2)),
				ЧислоИзШестнадцатеричнойСтроки("0x" + Сред(ЦветHex, 5, 2)));
		КонецЕсли;
	Иначе
		Цвет = WebЦвета[ЦветСтрока];
	КонецЕсли;
			
	Возврат Цвет;
	
КонецФункции

Функция ПолучитьСледующийТег(СтрокаСТегами, Позиция)
	
	Тег = Новый Структура("Тег", "");
	
	ОткрывающаяСкобка = СтрНайти(СтрокаСТегами, "<", НаправлениеПоиска.СНачала, Позиция);
	Если ОткрывающаяСкобка Тогда
		ЗакрывающаяСкобка = СтрНайти(СтрокаСТегами, ">", НаправлениеПоиска.СНачала, ОткрывающаяСкобка);
		Если ЗакрывающаяСкобка Тогда
			Позиция = ЗакрывающаяСкобка + 1;
			Возврат ОпределитьТег(Сред(СтрокаСТегами, ОткрывающаяСкобка, ЗакрывающаяСкобка - ОткрывающаяСкобка + 1), ОткрывающаяСкобка, ЗакрывающаяСкобка + 1);	
		КонецЕсли;	
	КонецЕсли;
	
	Возврат Тег;
	
КонецФункции

Функция ОпределитьТег(СтрокаТег, Начало, Конец)
	
	Тег = Новый Структура("Тег", "");
	
	Тег.Вставить("Тег", СтрокаТег);

	Если СтрокаТег = "<b>" Тогда
		Тег.Вставить("Позиция", Конец);
		Тег.Вставить("Открывающий", Истина);
		Тег.Вставить("ПарныйТег", "</b>");
		Тег.Вставить("Части", Новый Массив);
	ИначеЕсли СтрокаТег = "</b>" Тогда
		Тег.Вставить("Позиция", Начало);
		Тег.Вставить("Открывающий", Ложь);
	ИначеЕсли СтрокаТег = "<i>" Тогда
		Тег.Вставить("Позиция", Конец);
		Тег.Вставить("Открывающий", Истина);
		Тег.Вставить("ПарныйТег", "</i>");
		Тег.Вставить("Части", Новый Массив);
	ИначеЕсли СтрокаТег = "</i>" Тогда
		Тег.Вставить("Позиция", Начало);
		Тег.Вставить("Открывающий", Ложь);
	ИначеЕсли СтрНачинаетсяС(СтрокаТег, "<font") Тогда
		Тег.Вставить("Позиция", Конец);
		Тег.Вставить("Открывающий", Истина);
		Тег.Вставить("ПарныйТег", "</font>");
		Тег.Вставить("Части", Новый Массив);
	ИначеЕсли СтрокаТег = "</font>" Тогда
		Тег.Вставить("Позиция", Начало);
		Тег.Вставить("Открывающий", Ложь);
	ИначеЕсли СтрНачинаетсяС(СтрокаТег, "<a href") Тогда
		Тег.Вставить("Позиция", Конец);
		Тег.Вставить("Открывающий", Истина);
		Тег.Вставить("ПарныйТег", "</a>");
		Тег.Вставить("Части", Новый Массив);
	ИначеЕсли СтрокаТег = "</a>" Тогда
		Тег.Вставить("Позиция", Начало);
		Тег.Вставить("Открывающий", Ложь);
	ИначеЕсли СтрНачинаетсяС(СтрокаТег, "<img") Тогда
		Тег.Вставить("Позиция", Конец);
		Тег.Вставить("Открывающий", Истина);
		Тег.Вставить("ПарныйТег", "</img>");
		Тег.Вставить("Части", Новый Массив);
	ИначеЕсли СтрНачинаетсяС(СтрокаТег, "<span") Тогда
		Тег.Вставить("Позиция", Конец);
		Тег.Вставить("Открывающий", Истина);
		Тег.Вставить("ПарныйТег", "</span>");
		Тег.Вставить("Части", Новый Массив);
	ИначеЕсли СтрокаТег = "</span>" Тогда
		Тег.Вставить("Позиция", Начало);
		Тег.Вставить("Открывающий", Ложь);
	КонецЕсли;
	
	Возврат Тег;
	
КонецФункции

#КонецОбласти